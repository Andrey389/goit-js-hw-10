{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst btnEl = document.querySelector('.btn-start');\nconst spanValEl = document.querySelector('.value');\n\nlet intervalId = null;\n\nbtnEl.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose([selectedDates]) {\n    const result = Date.now() > selectedDates;\n    btnEl.disabled = result;\n    if (result) {\n      alert('Please choose a date in the future');\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nbtnEl.addEventListener('click', onClick);\nfunction onClick() {\n  let selectedDates = new Date(inputEl.value).getTime() - Date.now();\n  intervalId = setInterval(() => {\n    selectedDates -= 1000;\n    if (selectedDates < 100) {\n      clearInterval(intervalId);\n      updateTimer();\n      return;\n    }\n    const date = convertMs(selectedDates);\n    updateTimer(date);\n  }, 1000);\n}\n\nfunction updateTimer({\n  days = '00',\n  hours = '00',\n  minutes = '00',\n  seconds = '00',\n} = {}) {\n  spanValEl[0].textContent = days;\n  spanValEl[1].textContent = hours;\n  spanValEl[2].textContent = minutes;\n  spanValEl[3].textContent = seconds;\n}\nconsole.log(spanValEl[0]);\nconsole.log(spanValEl[1]);\nconsole.log(spanValEl[2]);\nconsole.log(spanValEl[3]);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["inputEl","btnEl","spanValEl","intervalId","options","selectedDates","result","flatpickr","onClick","updateTimer","date","convertMs","days","hours","minutes","seconds","ms"],"mappings":"+EAMA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAQ,SAAS,cAAc,YAAY,EAC3CC,EAAY,SAAS,cAAc,QAAQ,EAEjD,IAAIC,EAAa,KAEjBF,EAAM,SAAW,GAEjB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQ,CAACC,CAAa,EAAG,CACvB,MAAMC,EAAS,KAAK,IAAG,EAAKD,EAC5BJ,EAAM,SAAWK,EACbA,GACF,MAAM,oCAAoC,CAE7C,CACH,EAEAC,EAAUP,EAASI,CAAO,EAE1BH,EAAM,iBAAiB,QAASO,CAAO,EACvC,SAASA,GAAU,CACjB,IAAIH,EAAgB,IAAI,KAAKL,EAAQ,KAAK,EAAE,QAAS,EAAG,KAAK,MAC7DG,EAAa,YAAY,IAAM,CAE7B,GADAE,GAAiB,IACbA,EAAgB,IAAK,CACvB,cAAcF,CAAU,EACxBM,IACA,MACD,CACD,MAAMC,EAAOC,EAAUN,CAAa,EACpCI,EAAYC,CAAI,CACjB,EAAE,GAAI,CACT,CAEA,SAASD,EAAY,CACnB,KAAAG,EAAO,KACP,MAAAC,EAAQ,KACR,QAAAC,EAAU,KACV,QAAAC,EAAU,IACZ,EAAI,GAAI,CACNb,EAAU,CAAC,EAAE,YAAcU,EAC3BV,EAAU,CAAC,EAAE,YAAcW,EAC3BX,EAAU,CAAC,EAAE,YAAcY,EAC3BZ,EAAU,CAAC,EAAE,YAAca,CAC7B,CACA,QAAQ,IAAIb,EAAU,CAAC,CAAC,EACxB,QAAQ,IAAIA,EAAU,CAAC,CAAC,EACxB,QAAQ,IAAIA,EAAU,CAAC,CAAC,EACxB,QAAQ,IAAIA,EAAU,CAAC,CAAC,EAExB,SAASS,EAAUK,EAAI,CAQrB,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAE1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EAEpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EAEjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}